services:
  minio:
    restart: on-failure
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  postgres:
    restart: on-failure
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - SUPABASE_PASSWORD=${SUPABASE_PASSWORD:-root}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 12

  redis:
    restart: on-failure
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning

  gotrue:
    restart: on-failure
    build:
      context: ../PonyNotes-gotrue
      dockerfile: Dockerfile
    image: appflowyinc/gotrue:dev-aliyun-sms
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Gotrue config: https://github.com/supabase/auth/blob/master/example.env
      - GOTRUE_ADMIN_EMAIL=${GOTRUE_ADMIN_EMAIL}
      - GOTRUE_ADMIN_PASSWORD=${GOTRUE_ADMIN_PASSWORD}
      - GOTRUE_DISABLE_SIGNUP=${GOTRUE_DISABLE_SIGNUP:-false}
      - GOTRUE_SITE_URL=appflowy-flutter://                           # redirected to AppFlowy application
      - GOTRUE_URI_ALLOW_LIST=**                                      # adjust restrict if necessary
      - GOTRUE_JWT_SECRET=${GOTRUE_JWT_SECRET}                        # authentication secret
      - GOTRUE_JWT_EXP=${GOTRUE_JWT_EXP}
      # Without this environment variable, the createuser command will create an admin
      # with the `admin` role as opposed to `supabase_admin`
      - GOTRUE_JWT_ADMIN_GROUP_NAME=supabase_admin
      - GOTRUE_DB_DRIVER=postgres
      - API_EXTERNAL_URL=${API_EXTERNAL_URL}
      - DATABASE_URL=${GOTRUE_DATABASE_URL}
      - PORT=9999
      - GOTRUE_MAILER_URLPATHS_CONFIRMATION=/verify
      - GOTRUE_SMTP_HOST=${GOTRUE_SMTP_HOST}                              # e.g. smtp.gmail.com
      - GOTRUE_SMTP_PORT=${GOTRUE_SMTP_PORT}                              # e.g. 465
      - GOTRUE_SMTP_USER=${GOTRUE_SMTP_USER}                              # email sender, e.g. noreply@appflowy.io
      - GOTRUE_SMTP_PASS=${GOTRUE_SMTP_PASS}                              # email password
      - GOTRUE_SMTP_ADMIN_EMAIL=${GOTRUE_SMTP_ADMIN_EMAIL}                # email with admin privileges e.g. internal@appflowy.io
      - GOTRUE_SMTP_MAX_FREQUENCY=${GOTRUE_SMTP_MAX_FREQUENCY:-1ns}       # set to 1ns for running tests
      - GOTRUE_RATE_LIMIT_EMAIL_SENT=${GOTRUE_RATE_LIMIT_EMAIL_SENT:-100} # number of email sendable per minute
      - GOTRUE_MAILER_AUTOCONFIRM=${GOTRUE_MAILER_AUTOCONFIRM:-false}     # change this to true to skip email confirmation
      # Google OAuth config
      - GOTRUE_EXTERNAL_GOOGLE_ENABLED=${GOTRUE_EXTERNAL_GOOGLE_ENABLED}
      - GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID=${GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID}
      - GOTRUE_EXTERNAL_GOOGLE_SECRET=${GOTRUE_EXTERNAL_GOOGLE_SECRET}
      - GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI=${GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI}
      # Apple OAuth config
      - GOTRUE_EXTERNAL_APPLE_ENABLED=${GOTRUE_EXTERNAL_APPLE_ENABLED}
      - GOTRUE_EXTERNAL_APPLE_CLIENT_ID=${GOTRUE_EXTERNAL_APPLE_CLIENT_ID}
      - GOTRUE_EXTERNAL_APPLE_SECRET=${GOTRUE_EXTERNAL_APPLE_SECRET}
      - GOTRUE_EXTERNAL_APPLE_REDIRECT_URI=${GOTRUE_EXTERNAL_APPLE_REDIRECT_URI}
      # GITHUB OAuth config
      - GOTRUE_EXTERNAL_GITHUB_ENABLED=${GOTRUE_EXTERNAL_GITHUB_ENABLED}
      - GOTRUE_EXTERNAL_GITHUB_CLIENT_ID=${GOTRUE_EXTERNAL_GITHUB_CLIENT_ID}
      - GOTRUE_EXTERNAL_GITHUB_SECRET=${GOTRUE_EXTERNAL_GITHUB_SECRET}
      - GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI=${GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI}
      # Discord OAuth config
      - GOTRUE_EXTERNAL_DISCORD_ENABLED=${GOTRUE_EXTERNAL_DISCORD_ENABLED}
      - GOTRUE_EXTERNAL_DISCORD_CLIENT_ID=${GOTRUE_EXTERNAL_DISCORD_CLIENT_ID}
      - GOTRUE_EXTERNAL_DISCORD_SECRET=${GOTRUE_EXTERNAL_DISCORD_SECRET}
      - GOTRUE_EXTERNAL_DISCORD_REDIRECT_URI=${GOTRUE_EXTERNAL_DISCORD_REDIRECT_URI}
      # Douyin OAuth config
      - GOTRUE_EXTERNAL_DOUYIN_ENABLED=${GOTRUE_EXTERNAL_DOUYIN_ENABLED}
      - GOTRUE_EXTERNAL_DOUYIN_CLIENT_ID=${GOTRUE_EXTERNAL_DOUYIN_CLIENT_ID}
      - GOTRUE_EXTERNAL_DOUYIN_SECRET=${GOTRUE_EXTERNAL_DOUYIN_SECRET}
      - GOTRUE_EXTERNAL_DOUYIN_REDIRECT_URI=${GOTRUE_EXTERNAL_DOUYIN_REDIRECT_URI}
      - GOTRUE_MAILER_TEMPLATES_CONFIRMATION=${GOTRUE_MAILER_TEMPLATES_CONFIRMATION:-}
      - GOTRUE_MAILER_TEMPLATES_INVITE=${GOTRUE_MAILER_TEMPLATES_INVITE:-}
      - GOTRUE_MAILER_TEMPLATES_RECOVERY=${GOTRUE_MAILER_TEMPLATES_RECOVERY:-}
      - GOTRUE_MAILER_TEMPLATES_MAGIC_LINK=${GOTRUE_MAILER_TEMPLATES_MAGIC_LINK:-}
      # Aliyun SMS Configuration
      - GOTRUE_EXTERNAL_PHONE_ENABLED=true
      - GOTRUE_SMS_PROVIDER=aliyun
      - GOTRUE_SMS_ALIYUN_ACCESS_KEY_ID=${ALIYUN_SMS_ACCESS_KEY_ID}
      - GOTRUE_SMS_ALIYUN_ACCESS_KEY_SECRET=${ALIYUN_SMS_ACCESS_KEY_SECRET}
      - GOTRUE_SMS_ALIYUN_SIGN_NAME=${ALIYUN_SMS_SIGN_NAME}
      - GOTRUE_SMS_ALIYUN_TEMPLATE_CODE=${ALIYUN_SMS_TEMPLATE_CODE}
      - GOTRUE_SMS_TEMPLATE=${GOTRUE_SMS_TEMPLATE:-Your code is {{ .Code }}}
      - SMS_CODE_LENGTH=${SMS_CODE_LENGTH:-6}
      - SMS_CODE_EXPIRE_MINUTES=${SMS_CODE_EXPIRE_MINUTES:-5}
      - SMS_RATE_LIMIT_MINUTES=${SMS_RATE_LIMIT_MINUTES:-1}
      # Douyin OAuth2 (抖音开放平台)
      - GOTRUE_EXTERNAL_DOUYIN_ENABLED=${GOTRUE_EXTERNAL_DOUYIN_ENABLED}
      - GOTRUE_EXTERNAL_DOUYIN_CLIENT_ID=${GOTRUE_EXTERNAL_DOUYIN_CLIENT_ID}
      - GOTRUE_EXTERNAL_DOUYIN_SECRET=${GOTRUE_EXTERNAL_DOUYIN_SECRET}
      - GOTRUE_EXTERNAL_DOUYIN_REDIRECT_URI=${GOTRUE_EXTERNAL_DOUYIN_REDIRECT_URI}
    ports:
      - 9999:9999

  appflowy_cloud:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    image: appflowyinc/appflowy_cloud:latest
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - APPFLOWY_ENVIRONMENT=${APPFLOWY_ENVIRONMENT:-local}
      - APPFLOWY_DATABASE_URL=${APPFLOWY_DATABASE_URL:-postgres://postgres:password@postgres:5432/postgres}
      - APPFLOWY_REDIS_URI=${APPFLOWY_REDIS_URI:-redis://redis:6379}
      - APPFLOWY_GOTRUE_JWT_SECRET=${GOTRUE_JWT_SECRET}
      - APPFLOWY_GOTRUE_JWT_EXP=${GOTRUE_JWT_EXP:-3600}
      - APPFLOWY_GOTRUE_BASE_URL=${APPFLOWY_GOTRUE_BASE_URL:-http://gotrue:9999}
      - APPFLOWY_WEB_URL=${APPFLOWY_WEB_URL:-http://localhost}
      - APPFLOWY_S3_CREATE_BUCKET=${APPFLOWY_S3_CREATE_BUCKET:-true}
      - APPFLOWY_S3_USE_MINIO=${APPFLOWY_S3_USE_MINIO:-true}
      - APPFLOWY_S3_MINIO_URL=${APPFLOWY_S3_MINIO_URL:-http://minio:9000}
      - APPFLOWY_S3_ACCESS_KEY=${APPFLOWY_S3_ACCESS_KEY:-minioadmin}
      - APPFLOWY_S3_SECRET_KEY=${APPFLOWY_S3_SECRET_KEY:-minioadmin}
      - APPFLOWY_S3_BUCKET=${APPFLOWY_S3_BUCKET:-appflowy}
      - APPFLOWY_ACCESS_CONTROL=${APPFLOWY_ACCESS_CONTROL:-false}
      - APPFLOWY_DATABASE_MAX_CONNECTIONS=${APPFLOWY_DATABASE_MAX_CONNECTIONS:-10}
      # AI Service Configuration
      - AI_SERVER_PORT=${AI_SERVER_PORT:-5001}
      - AI_SERVER_HOST=${AI_SERVER_HOST:-ai}
      # 抖音开放平台直接配置 (用于PonyNotes自定义OAuth流程)
      - DOUYIN_CLIENT_KEY=${DOUYIN_CLIENT_KEY}
      - DOUYIN_CLIENT_SECRET=${DOUYIN_CLIENT_SECRET}
      - DOUYIN_REDIRECT_URI=${DOUYIN_REDIRECT_URI}
      # 阿里云SMS配置 (用于短信验证码功能)
      - ALIYUN_SMS_ACCESS_KEY_ID=${ALIYUN_SMS_ACCESS_KEY_ID}
      - ALIYUN_SMS_ACCESS_KEY_SECRET=${ALIYUN_SMS_ACCESS_KEY_SECRET}
      - ALIYUN_SMS_SIGN_NAME=${ALIYUN_SMS_SIGN_NAME}
      - ALIYUN_SMS_TEMPLATE_CODE=${ALIYUN_SMS_TEMPLATE_CODE}
      - ALIYUN_SMS_ENDPOINT=${ALIYUN_SMS_ENDPOINT:-dysmsapi.aliyuncs.com}
      - ALIYUN_SMS_API_VERSION=${ALIYUN_SMS_API_VERSION:-2017-05-25}
      - SMS_CODE_LENGTH=${SMS_CODE_LENGTH:-6}
      - SMS_CODE_EXPIRE_MINUTES=${SMS_CODE_EXPIRE_MINUTES:-5}
      - SMS_RATE_LIMIT_MINUTES=${SMS_RATE_LIMIT_MINUTES:-1}
      # 禁用代理以避免干扰阿里云SMS服务连接
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - http_proxy=
      - https_proxy=
      - NO_PROXY=
      - no_proxy=
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      gotrue:
        condition: service_started
      # ai:
      #   condition: service_started

  ai:
    restart: on-failure
    image: appflowyinc/appflowy_ai:${APPFLOWY_AI_VERSION:-latest}
    ports:
      - "5001:5001"
    environment:
      # 使用通义千问的API密钥，因为它是sk-格式，与OpenAI兼容
      # JWT Configuration - 添加缺失的JWT配置
      - JWT_SECRET=${GOTRUE_JWT_SECRET}
      - APPFLOWY_GOTRUE_JWT_SECRET=${GOTRUE_JWT_SECRET}
      - APPFLOWY_GOTRUE_JWT_EXP=${GOTRUE_JWT_EXP:-3600}
      - APPFLOWY_GOTRUE_BASE_URL=${APPFLOWY_GOTRUE_BASE_URL:-http://gotrue:9999}
      - OPENAI_API_KEY=${AI_QWEN_API_KEY}      # 使用通义千问的API base来兼容OpenAI格式
      - OPENAI_API_BASE=${AI_QWEN_API_BASE}
      - APPFLOWY_AI_SERVER_PORT=${AI_SERVER_PORT}
      - APPFLOWY_AI_DATABASE_URL=${AI_DATABASE_URL}
      - DATABASE_URL=${AI_DATABASE_URL}
      - APPFLOWY_AI_REDIS_URL=${AI_REDIS_URL}
      - AI_APPFLOWY_HOST=${AI_APPFLOWY_HOST}
      - AI_USE_MINIO=${APPFLOWY_S3_USE_MINIO}
      - AI_MINIO_URL=${AI_MINIO_URL}
      - AI_AWS_ACCESS_KEY_ID=${APPFLOWY_S3_ACCESS_KEY}
      - AI_AWS_SECRET_ACCESS_KEY=${APPFLOWY_S3_SECRET_KEY}
      # DeepSeek R1 V3 Configuration
      - DEEPSEEK_API_KEY=${AI_DEEPSEEK_API_KEY}
      - DEEPSEEK_API_BASE=${AI_DEEPSEEK_API_BASE}
      - DEEPSEEK_MODEL_NAME=${AI_DEEPSEEK_MODEL_NAME}
      - ENABLE_DEEPSEEK=true
      # 通义千问 Configuration
      - QWEN_API_KEY=${AI_QWEN_API_KEY}
      - QWEN_API_BASE=${AI_QWEN_API_BASE}
      - QWEN_MODEL_NAME=${AI_QWEN_MODEL_NAME}
      - ENABLE_QWEN=true
      # 豆包 Configuration
      - DOUBAO_API_KEY=${AI_DOUBAO_API_KEY}
      - DOUBAO_API_BASE=${AI_DOUBAO_API_BASE}
      - DOUBAO_MODEL_NAME=${AI_DOUBAO_MODEL_NAME}
      - ENABLE_DOUBAO=true
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - default

  nginx:
    restart: on-failure
    image: nginx:alpine
    ports:
      - 9998:9998
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - gotrue
      - appflowy_cloud
    networks:
      - default

  pgadmin:
    restart: on-failure
    image: dpage/pgadmin4
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5400:80
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
